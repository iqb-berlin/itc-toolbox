<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:libco="clr-namespace:iqb.lib.components;assembly=iqblib-components"
        xmlns:local="clr-namespace:iqb.testcenter.toolbox"
        SizeToContent="Height"
        mc:Ignorable="d"
        Title="MainWindow" Width="800" Icon="Resources/IQB-Testcenter.ico">
    <Window.Resources>
        <ResourceDictionary Source="pack://application:,,,/iqblib-components;component/GlobalStyles.xaml"/>
    </Window.Resources>
    <DockPanel>
        <DockPanel.Resources>
            <VisualBrush
                        x:Key="HatchBrush1"
                        TileMode="Tile" Viewport="0,0,20,20"
                        ViewportUnits="Absolute" Viewbox="0,0,20,20"   
                        ViewboxUnits="Absolute">
                <VisualBrush.Visual>
                    <Canvas>
                        <Rectangle Fill="#FFEAEAEA" Width="20" Height="20" />

                        <Path Stroke="White" Data="M 0 10 l 10 10" />
                        <Path Stroke="White" Data="M 10 0 l 7 3" />
                        <Path Stroke="White" Data="M 17 3 l 3 7" />

                        <Path Stroke="White" Data="M 6 0 l -6 20" />
                        <Path Stroke="White" Data="M 20 0 l -14 20" />
                    </Canvas>
                </VisualBrush.Visual>
            </VisualBrush>
        </DockPanel.Resources>
        <DockPanel DockPanel.Dock="Top" Margin="10">
            <libco:ButtonHelp DockPanel.Dock="Right" Height="26" Width="26" Margin="10 0 0 10" VerticalAlignment="Top"/>
            <TextBlock TextWrapping="Wrap" Margin="0 0 10 0" DockPanel.Dock="Top">
                Diese Anwendung transformiert Daten des IQB-Testcenters. Im oberen Abschnitt werden Dateien erzeugt, die entweder direkt als Xml-Steuerdateien 
                dienen können oder ein Zwischenschritt dafür darstellen. Im unteren Abschnitt werden Ergebnisdaten aus dem IQB-Testcenter
                in das Excel-Format übertragen.
            </TextBlock>
        </DockPanel>
        <StackPanel Margin="10">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Padding" Value="10 4 10 4"/>
                    <Setter Property="Margin" Value="0 1 5 1"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Width" Value="160"/>
                </Style>
            </StackPanel.Resources>
            <TextBlock Padding="4 10 0 5" Background="{StaticResource HatchBrush1}" Margin="0 0 0 10">
                <Run Text="Testmaterial" FontSize="16"/></TextBlock>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnBookletXlsx_Click">Booklet-Xlsx</Button>
                <StackPanel DockPanel.Dock="Right" Width="110">
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-booklet.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Booklet-Template.xlsx">
                            <Run Text="Vorlage" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
                <TextBlock TextWrapping="Wrap">
                        Einlesen einer speziell vorbereiteten Excel-Tabelle, Prüfen und Erzeugen von XML-Booklets.
                </TextBlock>
            </DockPanel>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnLoginPoolXlsx_Click">Codes-Xlsx</Button>
                <TextBlock DockPanel.Dock="Right" Width="110">
                    <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-codes.md">
                        <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                    </Hyperlink>
                </TextBlock>
                <TextBlock TextWrapping="Wrap">
                        Erzeugen einer großen Menge an Codes, die für Logins, Personencodes und Kennwörtern verwendet werden können.
                </TextBlock>
            </DockPanel>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnLoginXlsxTemplate_Click">Logins aus Vorlage</Button>
                <StackPanel DockPanel.Dock="Right" Width="110">
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-logins-template.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Logins-Vorlage.xlsx">
                            <Run Text="Vorlage" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
                <TextBlock TextWrapping="Wrap">
                        Einlesen einer speziell vorbereiteten Excel-Tabelle, Prüfen und Erzeugen von Logins und dann der Testtaker-XML.
                </TextBlock>
            </DockPanel>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnLoginXlsxToDocx_Click">Logins in Docx</Button>
                <StackPanel DockPanel.Dock="Right" Width="110">
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-logins-docx.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Logins-Vorlage1.docx">
                            <Run Text="Vorlage 1" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Logins-Vorlage2.docx">
                            <Run Text="Vorlage 2" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
                <TextBlock TextWrapping="Wrap">
                        Einlesen einer speziell vorbereiteten Excel-Tabelle und Erzeugen von Docx-Dateien zum Ausdruck für Testpersonen.
                </TextBlock>
            </DockPanel>
            <TextBlock Padding="4 10 0 5" Background="{StaticResource HatchBrush1}" Margin="0 10 0 10">
                <Run Text="Testergebnisse" FontSize="16"/></TextBlock>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnSysCheck_Click">SysCheck csv -> xlsx</Button>
                <TextBlock TextWrapping="Wrap">
                        Einlesen einer CSV aus den System-Check-Ergebnissen, Speichern als Xlsx (Umlaute korrigiert)
                </TextBlock>
            </DockPanel>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnResponses_Click">
                    <Button.Content>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                            Antworten und Logs csv &#8594; xlsx
                        </TextBlock>
                    </Button.Content>
                </Button>
                <TextBlock DockPanel.Dock="Right" Width="100">
                    <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-output.md">
                        <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                    </Hyperlink>
                </TextBlock>
                <TextBlock TextWrapping="Wrap">
                        Einlesen aller CSV mit Antworten und Logdaten, Speichern als Xlsx (Umlaute korrigiert), ggf. Transformieren/Umbenennen von Variablen
                </TextBlock>
            </DockPanel>
            <DockPanel>
                <Button DockPanel.Dock="Left" Click="BtnGetTestcenterData_Click">
                    <Button.Content>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                            Antworten und Logs Testcenter online &#8594; xlsx
                        </TextBlock>
                    </Button.Content>
                </Button>
                <TextBlock DockPanel.Dock="Right" Width="100">
                </TextBlock>
                <TextBlock TextWrapping="Wrap">
                        Verbinden mit einem Testcenter und abrufen aller Antworten und Logdaten, Speichern als Xlsx
                </TextBlock>
            </DockPanel>
        </StackPanel>
    </DockPanel>
</Window>
