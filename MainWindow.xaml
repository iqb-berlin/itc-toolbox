<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:libco="clr-namespace:iqb.lib.components;assembly=iqblib-components"
        xmlns:local="clr-namespace:iqb.testcenter.toolbox"
        SizeToContent="Height"
        mc:Ignorable="d"
        Title="MainWindow" Width="700" Icon="Resources/IQB-Testcenter.ico" MinHeight="500">
    <Window.Resources>
        <ResourceDictionary Source="pack://application:,,,/iqblib-components;component/GlobalStyles.xaml"/>
    </Window.Resources>
    <DockPanel Background="#142952">
        <DockPanel.Resources>
            <libco:IntegerBooleanGreaterThen0Converter x:Key="IntegerBooleanGreaterThen0Converter"/>
        </DockPanel.Resources>
        <DockPanel DockPanel.Dock="Top" Margin="10">
            <libco:ButtonHelp DockPanel.Dock="Right" Height="26" Width="26" Margin="10 0 0 10" VerticalAlignment="Top"/>
            <TextBlock TextWrapping="Wrap" Margin="0 0 10 0" DockPanel.Dock="Top" Foreground="white">
                Diese Anwendung transformiert Daten des IQB-Testcenters. Im Abschnitt "Input" werden Dateien erzeugt, die entweder direkt als Xml-Steuerdateien 
                dienen können oder ein Zwischenschritt dafür darstellen. Im Abschnitt "Output direkt" werden Ergebnisdaten aus dem IQB-Testcenter oder aus CSV-Dateien 
                direkt in das JSON- oder Excel-Format übertragen. Der Abschnitt "DB Antworten+Logs" ist für große Datenmengen gedacht. Man legt hierbei 
                eine Datenbank-Datei an und erzeugt dann verschiedene Ausgaben.
            </TextBlock>
        </DockPanel>
        <TabControl TabStripPlacement="Top" Name="TCScanSelect">
            <TabControl.Resources>
                <DataTemplate x:Key="MainTabControlHeader">
                    <TextBlock Text="{Binding}" 
                               Foreground="DarkBlue" 
                               FontSize="14" 
                               Padding="10 4"
                               FontWeight="Bold"
                               TextWrapping="Wrap"/>
                </DataTemplate>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="HeaderTemplate" Value="{StaticResource MainTabControlHeader}"/>
                </Style>
            </TabControl.Resources>
            <TabItem Name="TIBooklets">
                <TabItem.Header>Input</TabItem.Header>
                <StackPanel Margin="10" Background="Transparent">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Padding" Value="10 4 10 4"/>
                            <Setter Property="Margin" Value="0 1 5 1"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Width" Value="120"/>
                            <Setter Property="Height" Value="40"/>
                        </Style>
                    </StackPanel.Resources>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnBookletXlsx_Click">Booklet-Xlsx</Button>
                        <StackPanel DockPanel.Dock="Right" Width="110">
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-booklet.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Booklet-Template.xlsx">
                            <Run Text="Vorlage" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock TextWrapping="Wrap">
                        Einlesen einer speziell vorbereiteten Excel-Tabelle, Prüfen und Erzeugen von XML-Booklets.
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnLoginPoolXlsx_Click">Codes-Xlsx</Button>
                        <TextBlock DockPanel.Dock="Right" Width="110">
                    <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-codes.md">
                        <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                    </Hyperlink>
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap">
                        Erzeugen einer großen Menge an Codes, die für Logins, Personencodes und Kennwörtern verwendet werden können.
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnLoginXlsxTemplate_Click">Logins aus Vorlage</Button>
                        <StackPanel DockPanel.Dock="Right" Width="110">
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-logins-template.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Logins-Vorlage.xlsx">
                            <Run Text="Vorlage" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock TextWrapping="Wrap">
                        Einlesen einer speziell vorbereiteten Excel-Tabelle, Prüfen und Erzeugen von Logins und dann der Testtaker-XML.
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnLoginXlsxToDocx_Click">Logins in Docx</Button>
                        <StackPanel DockPanel.Dock="Right" Width="110">
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/docs/manual-logins-docx.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Logins-Vorlage1.docx">
                            <Run Text="Vorlage 1" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                            <TextBlock>
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/blob/master/Logins-Vorlage2.docx">
                            <Run Text="Vorlage 2" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock TextWrapping="Wrap">
                        Einlesen einer speziell vorbereiteten Excel-Tabelle und Erzeugen von Docx-Dateien zum Ausdruck für Testpersonen.
                        </TextBlock>
                    </DockPanel>
                </StackPanel>
            </TabItem>
            <TabItem Name="TIVariables">
                <TabItem.Header>Output direkt</TabItem.Header>
                <StackPanel Margin="10">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Padding" Value="10 4 10 4"/>
                            <Setter Property="Margin" Value="0 1 5 1"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Width" Value="130"/>
                            <Setter Property="Height" Value="40"/>
                        </Style>
                    </StackPanel.Resources>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnSysCheck_Click">
                            <Button.Content>
                                <StackPanel>
                                    <TextBlock TextAlignment="Center">SysCheck</TextBlock>
                                    <TextBlock TextAlignment="Center">CSV -> Xlsx</TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <TextBlock DockPanel.Dock="Right" Width="100">
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap">
                            Einlesen einer CSV aus den System-Check-Ergebnissen, Speichern als Xlsx (Umlaute korrigiert)
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnGetTestcenterReviewsData_Click">
                            <Button.Content>
                                <StackPanel>
                                    <TextBlock TextAlignment="Center">Reviews</TextBlock>
                                    <TextBlock TextAlignment="Center">Testcenter -> Xlsx</TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <TextBlock DockPanel.Dock="Right" Width="100">
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap">
                            Verbinden mit einem Testcenter und Abrufen aller Reviews, Speichern als Xlsx
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnTestcenterToJson_Click">
                            <Button.Content>
                                <StackPanel>
                                    <TextBlock TextAlignment="Center">Antworten+Logs</TextBlock>
                                    <TextBlock TextAlignment="Center">Testcenter -> JSON</TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <TextBlock DockPanel.Dock="Right" Width="100">
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap">
                            Verbinden mit einem Testcenter und Abrufen aller Antworten und Logs;
                            Speichern sofort als JSON; eine Datei pro Testtaker-Gruppe
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnTestcenterToXlsx_Click">
                            <Button.Content>
                                <StackPanel>
                                    <TextBlock TextAlignment="Center">Antworten</TextBlock>
                                    <TextBlock TextAlignment="Center">Testcenter -> Xlsx</TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <TextBlock DockPanel.Dock="Right" Width="100">
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap">
                            Verbinden mit einem Testcenter und Abrufen aller Antworten;
                            Speichern sofort als Excel-Datei (nur Antworten)
                        </TextBlock>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Click="BtnTestCsvToXlsx_Click">
                            <Button.Content>
                                <StackPanel>
                                    <TextBlock TextAlignment="Center">Antworten</TextBlock>
                                    <TextBlock TextAlignment="Center">CSV -> Xlsx</TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <TextBlock DockPanel.Dock="Right" Width="100">
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap">
                            Einlesen von CSV-Dateien und Speichern sofort als Excel-Datei (nur Antworten)
                        </TextBlock>
                    </DockPanel>
                </StackPanel>
            </TabItem>
            <TabItem Name="TITestees" Foreground="Navy">
                <TabItem.Header>DB: Antworten+Logs</TabItem.Header>
                <StackPanel Margin="10">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Padding" Value="10 4 10 4"/>
                            <Setter Property="Margin" Value="0 1 5 1"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Width" Value="180"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock TextWrapping="Wrap" Margin="0 10">
                        Anlegen einer Datenbank-Datei im Format SQLite. Diese Datenbank-Datei kann dann flexibel ausgewertet werden.
                        Achtung: Das Schreiben in die Datenbank dauert mitunter längere Zeit.
                    </TextBlock>
                    <Menu>
                        <MenuItem Header="_Datenbank">
                            <MenuItem Command="local:AppCommands.DBNew"/>
                            <MenuItem Command="local:AppCommands.DBOpen"/>
                            <MenuItem Command="local:AppCommands.DBCopyTo"/>
                            <Separator/>
                            <MenuItem Command="local:AppCommands.AppExit"/>
                        </MenuItem>
                        <MenuItem Header="_Hinzufügen">
                            <MenuItem Command="local:AppCommands.ImportFromTestcenter"/>
                            <MenuItem Command="local:AppCommands.ImportFromJson"/>
                            <MenuItem Command="local:AppCommands.ImportBookletsFromJson"/>
                            <MenuItem Command="local:AppCommands.ImportFromCsv"/>
                        </MenuItem>
                        <MenuItem Header="E_xport">
                            <MenuItem Command="local:AppCommands.ExportToJson"/>
                            <MenuItem Command="local:AppCommands.ExportToXlsx"/>
                        </MenuItem>
                    </Menu>
                    <TextBlock TextWrapping="Wrap" Margin="0 15" Name="TBDBInfo">
                        Keine Datenbank-Datei gewählt. Bitte wählen Sie über das Menü "Datenbank" den Punkt "Neu" oder öffnen Sie eine 
                        vorhandene Datenbank-Datei!
                    </TextBlock>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
